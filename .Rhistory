# loading libraries
library(dplyr)
library(tidyr)
library(ggplot2)
# load data
HAEntity <- read.csv("data/HAEntity.csv")
HA_NPI <- read.csv("data/HAEntityNPI.csv")
UseOfIT <- read.csv("data/UseOfITComponent.csv")
Pharma <- read.csv("data/Pharmacy.csv")
PharmProds <- read.csv("data/PharmacyProduct.csv")
# cleaning matching column names for clarity
HAEntity <- HAEntity %>%
rename(Care_Type = Type)
UseOfIT <- UseOfIT %>%
rename(Tech_Type = Type)
Pharma <- Pharma %>%
rename(Pharma_Id = Id)
PharmProds <- PharmProds %>%
rename(Pharma_Prod_Type = Type) %>%
rename(Pharma_Prod_Id = Id)
# left join NPI to HAEntity
data <- HAEntity %>%
left_join(HA_NPI, by = c("SurveyId", "HAEntityId")) %>%
left_join(UseOfIT, by = c("SurveyId", "HAEntityId"))
# join Pharma
data <- data %>%
left_join(Pharma, by = "HAEntityId") %>%
left_join(PharmProds, by = "HAEntityId")
# check mismatches from splitting SurveyId cols
mismatched <- which(!is.na(data$SurveyId.y) & (data$SurveyId.x != data$SurveyId.y | data$SurveyId != data$SurveyId.y))
if (length(mismatched) == 0) {
data <- data %>%
select(-SurveyId, -SurveyId.y) %>%
rename(SurveyId = SurveyId.x)
} else {print("Corrupted SurveyId Values - Mismatch")}
colnames(data)
# loading libraries
library(dplyr)
library(tidyr)
library(ggplot2)
# load data
HAEntity <- read.csv("data/HAEntity.csv")
HA_NPI <- read.csv("data/HAEntityNPI.csv")
UseOfIT <- read.csv("data/UseOfITComponent.csv")
Pharma <- read.csv("data/Pharmacy.csv")
PharmProds <- read.csv("data/PharmacyProduct.csv")
# clean matching col names for clarity
HAEntity <- HAEntity %>%
rename(Care_Type = Type)
UseOfIT <- UseOfIT %>%
rename(Tech_Type = Type)
Pharma <- Pharma %>%
rename(Pharma_Id = Id)
PharmProds <- PharmProds %>%
rename(Pharma_Prod_Type = Type) %>%
rename(Pharma_Prod_Id = Id)
# left join NPI to HAEntity
data <- HAEntity %>%
left_join(HA_NPI, by = c("SurveyId", "HAEntityId")) %>%
left_join(UseOfIT, by = c("SurveyId", "HAEntityId"))
# join Pharma/Prods
data <- data %>%
left_join(Pharma, by = "HAEntityId") %>%
left_join(PharmProds, by = "HAEntityId")
# check mismatches from splitting SurveyId cols
mismatched <- which(!is.na(data$SurveyId.y) & (data$SurveyId.x != data$SurveyId.y | data$SurveyId != data$SurveyId.y))
if (length(mismatched) == 0) {
data <- data %>%
select(-SurveyId, -SurveyId.y) %>%
rename(SurveyId = SurveyId.x)
} else {print("Corrupted SurveyId Values - Mismatch")}
colnames(data)
# loading libraries
library(dplyr)
library(tidyr)
library(ggplot2)
# load data
HAEntity <- read.csv("data/HAEntity.csv")
HA_NPI <- read.csv("data/HAEntityNPI.csv")
UseOfIT <- read.csv("data/UseOfITComponent.csv")
Pharma <- read.csv("data/Pharmacy.csv")
PharmProds <- read.csv("data/PharmacyProduct.csv")
# clean matching col names for clarity
HAEntity <- HAEntity %>%
rename(Care_Type = Type)
UseOfIT <- UseOfIT %>%
rename(Tech_Type = Type)
Pharma <- Pharma %>%
rename(Pharma_Id = Id)
PharmProds <- PharmProds %>%
rename(Pharma_Prod_Type = Type) %>%
rename(Pharma_Prod_Id = Id)
# left join NPI to HAEntity
data <- HAEntity %>%
left_join(HA_NPI, by = c("SurveyId", "HAEntityId")) %>%
left_join(UseOfIT, by = c("SurveyId", "HAEntityId"))
# join Pharma/Prods
data <- data %>%
left_join(Pharma, by = "HAEntityId") %>%
left_join(PharmProds, by = "HAEntityId")
# check mismatches from splitting SurveyId cols
mismatched <- which(!is.na(data$SurveyId.y) & (data$SurveyId.x != data$SurveyId.y | data$SurveyId != data$SurveyId.y))
if (length(mismatched) == 0) {
data <- data %>%
select(-SurveyId, -SurveyId.y) %>%
rename(SurveyId = SurveyId.x)
} else {print("Corrupted SurveyId Values - Mismatch")}
colnames(data)
# load data
HAEntity <- read.csv("data/HAEntity.csv")
HA_NPI <- read.csv("data/HAEntityNPI.csv")
UseOfIT <- read.csv("data/UseOfITComponent.csv")
Pharma <- read.csv("data/Pharmacy.csv")
PharmProds <- read.csv("data/PharmacyProduct.csv")
Pharma$id
# load data
HAEntity <- read.csv("data/HAEntity.csv")
HA_NPI <- read.csv("data/HAEntityNPI.csv")
UseOfIT <- read.csv("data/UseOfITComponent.csv")
Pharma <- read.csv("data/Pharmacy.csv")
PharmProds <- read.csv("data/PharmacyProduct.csv")
UseOfIT$id
# load data
HAEntity <- read.csv("data/HAEntity.csv")
HA_NPI <- read.csv("data/HAEntityNPI.csv")
UseOfIT <- read.csv("data/UseOfITComponent.csv")
Pharma <- read.csv("data/Pharmacy.csv")
PharmProds <- read.csv("data/PharmacyProduct.csv")
HAEntity$id
# load data
HAEntity <- read.csv("data/HAEntity.csv")
HA_NPI <- read.csv("data/HAEntityNPI.csv")
UseOfIT <- read.csv("data/UseOfITComponent.csv")
Pharma <- read.csv("data/Pharmacy.csv")
PharmProds <- read.csv("data/PharmacyProduct.csv")
Pharma$id
# load data
HAEntity <- read.csv("data/HAEntity.csv")
HA_NPI <- read.csv("data/HAEntityNPI.csv")
UseOfIT <- read.csv("data/UseOfITComponent.csv")
Pharma <- read.csv("data/Pharmacy.csv")
PharmProds <- read.csv("data/PharmacyProduct.csv")
PharmProds$id
# clean matching col names for clarity
HAEntity <- HAEntity %>%
rename(Care_Type = Type)
UseOfIT <- UseOfIT %>%
rename(Tech_Type = Type)
Pharma <- Pharma %>%
rename(Pharma_Id = Id)
PharmProds <- PharmProds %>%
rename(Pharma_Prod_Type = Type) %>%
rename(Pharma_Prod_Id = Id)
# left join NPI to HAEntity
data <- HAEntity %>%
left_join(HA_NPI, by = c("SurveyId", "HAEntityId")) %>%
left_join(UseOfIT, by = c("SurveyId", "HAEntityId"))
# join Pharma/Prods
data <- data %>%
left_join(Pharma, by = "HAEntityId") %>%
left_join(PharmProds, by = "HAEntityId")
# check mismatches from splitting SurveyId cols
mismatched <- which(!is.na(data$SurveyId.y) & (data$SurveyId.x != data$SurveyId.y | data$SurveyId != data$SurveyId.y))
if (length(mismatched) == 0) {
data <- data %>%
select(-SurveyId, -SurveyId.y) %>%
rename(SurveyId = SurveyId.x)
} else {print("Corrupted SurveyId Values - Mismatch")}
colnames(data)
# clean matching col names for clarity
HAEntity <- HAEntity %>%
rename(Care_Type = Type)
# clean matching col names for clarity
HAEntity <- HAEntity %>%
rename(Care_Type = Type)
# loading libraries
library(dplyr)
library(tidyr)
library(ggplot2)
# load data
HAEntity <- read.csv("data/HAEntity.csv")
HA_NPI <- read.csv("data/HAEntityNPI.csv")
UseOfIT <- read.csv("data/UseOfITComponent.csv")
Pharma <- read.csv("data/Pharmacy.csv")
PharmProds <- read.csv("data/PharmacyProduct.csv")
# clean matching col names for clarity
HAEntity <- HAEntity %>%
rename(Care_Type = Type)
UseOfIT <- UseOfIT %>%
rename(Tech_Type = Type)
Pharma <- Pharma %>%
rename(Pharma_Id = Id)
PharmProds <- PharmProds %>%
rename(Pharma_Prod_Type = Type) %>%
rename(Pharma_Prod_Id = Id)
# left join NPI to HAEntity
data <- HAEntity %>%
left_join(HA_NPI, by = c("SurveyId", "HAEntityId")) %>%
left_join(UseOfIT, by = c("SurveyId", "HAEntityId"))
# join Pharma/Prods
data <- data %>%
left_join(Pharma, by = "HAEntityId") %>%
left_join(PharmProds, by = "HAEntityId")
# check mismatches from splitting SurveyId cols
mismatched <- which(!is.na(data$SurveyId.y) & (data$SurveyId.x != data$SurveyId.y | data$SurveyId != data$SurveyId.y))
if (length(mismatched) == 0) {
data <- data %>%
select(-SurveyId, -SurveyId.y) %>%
rename(SurveyId = SurveyId.x)
} else {print("Corrupted SurveyId Values - Mismatch")}
colnames(data)
data$id
# load data
HAEntity <- read.csv("data/HAEntity.csv")
HA_NPI <- read.csv("data/HAEntityNPI.csv")
UseOfIT <- read.csv("data/UseOfITComponent.csv")
Pharma <- read.csv("data/Pharmacy.csv")
PharmProds <- read.csv("data/PharmacyProduct.csv")
HA_NPI$id
# loading libraries
library(dplyr)
library(tidyr)
library(ggplot2)
# load data
HAEntity <- read.csv("data/HAEntity.csv")
HA_NPI <- read.csv("data/HAEntityNPI.csv")
UseOfIT <- read.csv("data/UseOfITComponent.csv")
Pharma <- read.csv("data/Pharmacy.csv")
PharmProds <- read.csv("data/PharmacyProduct.csv")
# clean matching col names for clarity
HAEntity <- HAEntity %>%
rename(Care_Type = Type)
HA_NPI <- HA_NPI %>%
rename(ProviderIdentifier = id)
UseOfIT <- UseOfIT %>%
rename(Tech_Type = Type)
Pharma <- Pharma %>%
rename(Pharma_Id = Id)
PharmProds <- PharmProds %>%
rename(Pharma_Prod_Type = Type) %>%
rename(Pharma_Prod_Id = Id)
# left join NPI to HAEntity
data <- HAEntity %>%
left_join(HA_NPI, by = c("SurveyId", "HAEntityId")) %>%
left_join(UseOfIT, by = c("SurveyId", "HAEntityId"))
# join Pharma/Prods
data <- data %>%
left_join(Pharma, by = "HAEntityId") %>%
left_join(PharmProds, by = "HAEntityId")
# check mismatches from splitting SurveyId cols
mismatched <- which(!is.na(data$SurveyId.y) & (data$SurveyId.x != data$SurveyId.y | data$SurveyId != data$SurveyId.y))
if (length(mismatched) == 0) {
data <- data %>%
select(-SurveyId, -SurveyId.y) %>%
rename(SurveyId = SurveyId.x)
} else {print("Corrupted SurveyId Values - Mismatch")}
colnames(data)
data$id
# loading libraries
library(dplyr)
library(tidyr)
library(ggplot2)
# load data
HAEntity <- read.csv("data/HAEntity.csv")
HA_NPI <- read.csv("data/HAEntityNPI.csv")
UseOfIT <- read.csv("data/UseOfITComponent.csv")
Pharma <- read.csv("data/Pharmacy.csv")
PharmProds <- read.csv("data/PharmacyProduct.csv")
# clean matching col names for clarity
HAEntity <- HAEntity %>%
rename(Care_Type = Type)
HA_NPI <- HA_NPI %>%
rename(ProviderIdentifier = id)
UseOfIT <- UseOfIT %>%
rename(Tech_Type = Type)
Pharma <- Pharma %>%
rename(Pharma_Id = Id)
PharmProds <- PharmProds %>%
rename(Pharma_Prod_Type = Type) %>%
rename(Pharma_Prod_Id = Id)
# left join NPI to HAEntity
data <- HAEntity %>%
left_join(HA_NPI, by = c("SurveyId", "HAEntityId")) %>%
left_join(UseOfIT, by = c("SurveyId", "HAEntityId"))
# join Pharma/Prods
data <- data %>%
left_join(Pharma, by = "HAEntityId") %>%
left_join(PharmProds, by = "HAEntityId")
# check mismatches from splitting SurveyId cols
mismatched <- which(!is.na(data$SurveyId.y) & (data$SurveyId.x != data$SurveyId.y | data$SurveyId != data$SurveyId.y))
if (length(mismatched) == 0) {
data <- data %>%
select(-SurveyId, -SurveyId.y) %>%
rename(SurveyId = SurveyId.x)
} else {print("Corrupted SurveyId Values - Mismatch")}
colnames(data)
data$id
# loading libraries
library(dplyr)
library(tidyr)
library(ggplot2)
# load data
HAEntity <- read.csv("data/HAEntity.csv")
HA_NPI <- read.csv("data/HAEntityNPI.csv")
UseOfIT <- read.csv("data/UseOfITComponent.csv")
Pharma <- read.csv("data/Pharmacy.csv")
PharmProds <- read.csv("data/PharmacyProduct.csv")
# clean matching col names for clarity
HAEntity <- HAEntity %>%
rename(Care_Type = Type)
HA_NPI <- HA_NPI %>%
rename(ProviderIdentifier = id)
UseOfIT <- UseOfIT %>%
rename(Tech_Type = Type)
Pharma <- Pharma %>%
rename(Pharma_Id = Id)
PharmProds <- PharmProds %>%
rename(Pharma_Prod_Type = Type) %>%
rename(Pharma_Prod_Id = Id)
# left join NPI to HAEntity
data <- HAEntity %>%
left_join(HA_NPI, by = c("SurveyId", "HAEntityId")) %>%
left_join(UseOfIT, by = c("SurveyId", "HAEntityId"))
# join Pharma/Prods
data <- data %>%
left_join(Pharma, by = "HAEntityId") %>%
left_join(PharmProds, by = "HAEntityId")
# check mismatches from splitting SurveyId cols
mismatched <- which(!is.na(data$SurveyId.y) & (data$SurveyId.x != data$SurveyId.y | data$SurveyId != data$SurveyId.y))
if (length(mismatched) == 0) {
data <- data %>%
select(-SurveyId, -SurveyId.y) %>%
rename(SurveyId = SurveyId.x)
} else {print("Corrupted SurveyId Values - Mismatch")}
colnames(data)
# load data
HAEntity <- read.csv("data/HAEntity.csv")
HA_NPI <- read.csv("data/HAEntityNPI.csv")
UseOfIT <- read.csv("data/UseOfITComponent.csv")
Pharma <- read.csv("data/Pharmacy.csv")
PharmProds <- read.csv("data/PharmacyProduct.csv")
head(UseOfIT)
# load data
HAEntity <- read.csv("data/HAEntity.csv")
HA_NPI <- read.csv("data/HAEntityNPI.csv")
UseOfIT <- read.csv("data/UseOfITComponent.csv")
Pharma <- read.csv("data/Pharmacy.csv")
PharmProds <- read.csv("data/PharmacyProduct.csv")
head(Pharma)
# load data
HAEntity <- read.csv("data/HAEntity.csv")
HA_NPI <- read.csv("data/HAEntityNPI.csv")
UseOfIT <- read.csv("data/UseOfITComponent.csv")
Pharma <- read.csv("data/Pharmacy.csv")
PharmProds <- read.csv("data/PharmacyProduct.csv")
head(PharmProds)
# loading libraries
library(dplyr)
library(tidyr)
library(ggplot2)
# load data
HAEntity <- read.csv("data/HAEntity.csv")
HA_NPI <- read.csv("data/HAEntityNPI.csv")
UseOfIT <- read.csv("data/UseOfITComponent.csv")
Pharma <- read.csv("data/Pharmacy.csv")
PharmaProds <- read.csv("data/PharmacyProduct.csv")
head(PharmaProds)
# clean matching col names for clarity
HAEntity <- HAEntity %>%
rename(Care_Type = Type)
HA_NPI <- HA_NPI %>%
rename(ProviderIdentifier = id)
UseOfIT <- UseOfIT %>%
rename(Tech_Type = Type)
Pharma <- Pharma %>%
rename(Pharma_Id = Id)
PharmaProds <- PharmaProds %>%
rename(Pharma_Prod_Type = Type) %>%
rename(Pharma_Prod_Id = Id)
# left join NPI to HAEntity
data <- HAEntity %>%
left_join(HA_NPI, by = c("SurveyId", "HAEntityId")) %>%
left_join(UseOfIT, by = c("SurveyId", "HAEntityId"))
# join Pharma/Prods
data <- data %>%
left_join(Pharma, by = "HAEntityId") %>%
left_join(PharmaProds, by = "HAEntityId")
# check mismatches from splitting SurveyId cols
mismatched <- which(!is.na(data$SurveyId.y) & (data$SurveyId.x != data$SurveyId.y | data$SurveyId != data$SurveyId.y))
if (length(mismatched) == 0) {
data <- data %>%
select(-SurveyId, -SurveyId.y) %>%
rename(SurveyId = SurveyId.x)
} else {print("Corrupted SurveyId Values - Mismatch")}
colnames(data)
# loading libraries
library(dplyr)
library(tidyr)
library(ggplot2)
# load data
HAEntity <- read.csv("data/HAEntity.csv")
HA_NPI <- read.csv("data/HAEntityNPI.csv")
UseOfIT <- read.csv("data/UseOfITComponent.csv")
Pharma <- read.csv("data/Pharmacy.csv")
PharmaProds <- read.csv("data/PharmacyProduct.csv")
# head(PharmaProds)
# clean matching col names for clarity
HAEntity <- HAEntity %>%
rename(Care_Type = Type)
HA_NPI <- HA_NPI %>%
rename(ProviderIdentifier = id)
UseOfIT <- UseOfIT %>%
rename(Tech_Type = Type)
Pharma <- Pharma %>%
rename(Pharma_Id = Id)
PharmaProds <- PharmaProds %>%
rename(Pharma_Prod_Type = Type) %>%
rename(Pharma_Prod_Id = Id)
# left join NPI to HAEntity
data <- HAEntity %>%
left_join(HA_NPI, by = c("SurveyId", "HAEntityId")) %>%
left_join(UseOfIT, by = c("SurveyId", "HAEntityId"))
# join Pharma/Prods
data <- data %>%
left_join(Pharma, by = "HAEntityId") %>%
left_join(PharmaProds, by = "HAEntityId")
# check mismatches from splitting SurveyId cols
mismatched <- which(!is.na(data$SurveyId.y) & (data$SurveyId.x != data$SurveyId.y | data$SurveyId != data$SurveyId.y))
if (length(mismatched) == 0) {
data <- data %>%
select(-SurveyId, -SurveyId.y) %>%
rename(SurveyId = SurveyId.x)
} else {print("Corrupted SurveyId Values - Mismatch")}
colnames(data)
# loading libraries
library(dplyr)
library(tidyr)
library(ggplot2)
# load data
HAEntity <- read.csv("data/HAEntity.csv")
HA_NPI <- read.csv("data/HAEntityNPI.csv")
UseOfIT <- read.csv("data/UseOfITComponent.csv")
Pharma <- read.csv("data/Pharmacy.csv")
PharmaProds <- read.csv("data/PharmacyProduct.csv")
# head(PharmaProds)
# clean matching col names for clarity
HAEntity <- HAEntity %>%
rename(Care_Type = Type)
HA_NPI <- HA_NPI %>%
rename(ProviderIdentifier = id)
UseOfIT <- UseOfIT %>%
rename(Tech_Type = Type)
Pharma <- Pharma %>%
rename(Pharma_Id = Id)
PharmaProds <- PharmaProds %>%
rename(Pharma_Prod_Type = Type) %>%
rename(Pharma_Prod_Id = Id)
# left join NPI to HAEntity
data <- HAEntity %>%
left_join(HA_NPI, by = c("SurveyId", "HAEntityId")) %>%
left_join(UseOfIT, by = c("SurveyId", "HAEntityId"))
# join Pharma/Prods
data <- data %>%
left_join(Pharma, by = "HAEntityId") %>%
left_join(PharmaProds, by = "HAEntityId")
# check mismatches from splitting SurveyId cols
mismatched <- which(!is.na(data$SurveyId.y) & (data$SurveyId.x != data$SurveyId.y | data$SurveyId != data$SurveyId.y))
if (length(mismatched) == 0) {
data <- data %>%
select(-SurveyId, -SurveyId.y) %>%
rename(SurveyId = SurveyId.x)
} else {print("Corrupted SurveyId Values - Mismatch")}
colnames(data)
# loading libraries
library(dplyr)
library(tidyr)
library(ggplot2)
# load data
HAEntity <- read.csv("data/HAEntity.csv")
HA_NPI <- read.csv("data/HAEntityNPI.csv")
UseOfIT <- read.csv("data/UseOfITComponent.csv")
Pharma <- read.csv("data/Pharmacy.csv")
PharmaProds <- read.csv("data/PharmacyProduct.csv")
# head(PharmaProds)
# clean matching col names for clarity
HAEntity <- HAEntity %>%
rename(Care_Type = Type)
HA_NPI <- HA_NPI %>%
rename(ProviderIdentifier = id)
UseOfIT <- UseOfIT %>%
rename(Tech_Type = Type)
Pharma <- Pharma %>%
rename(Pharma_Id = Id)
PharmaProds <- PharmaProds %>%
rename(Pharma_Prod_Type = Type) %>%
rename(Pharma_Prod_Id = Id)
# left join NPI to HAEntity
data <- HAEntity %>%
left_join(HA_NPI, by = c("SurveyId", "HAEntityId")) %>%
left_join(UseOfIT, by = c("SurveyId", "HAEntityId"))
# join Pharma/Prods
data <- data %>%
left_join(Pharma, by = "HAEntityId") %>%
left_join(PharmaProds, by = "HAEntityId")
# check mismatches from splitting SurveyId cols
mismatched <- which(!is.na(data$SurveyId.y) & (data$SurveyId.x != data$SurveyId.y | data$SurveyId != data$SurveyId.y))
if (length(mismatched) == 0) {
data <- data %>%
select(-SurveyId, -SurveyId.y) %>%
rename(SurveyId = SurveyId.x)
} else {print("Corrupted SurveyId Values - Mismatch")}
colnames(data)
